======================
 Installing Skoli 0.1
======================

:Contact:       horde@lists.horde.org

.. contents:: Contents
.. section-numbering::

This document contains instructions for installing the Skoli administrative
application for teachers on your system.

For information on the capabilities and features of Skoli, see the file
README_ in the top-level directory of the Skoli distribution.


Obtaining Skoli
==================

Skoli can be obtained from the Horde website and FTP server, at

   http://www.horde.org/skoli/

   ftp://ftp.horde.org/pub/skoli/

Or use the mirror closest to you:

   http://www.horde.org/mirrors.php

Bleeding-edge development versions of Skoli are available via CVS; see the
file `docs/HACKING`_ in the Horde distribution, or the website
http://www.horde.org/source/, for information on accessing the Horde CVS
repository.


Prerequisites
=============

To function properly, Skoli **requires** the following:

1. A working Horde installation.

   Skoli runs within the `Horde Application Framework`_, a set of common
   tools for Web applications written in PHP. You must install Horde before
   installing Skoli.

   .. Important:: Skoli 0.1 requires version 3.0+ of the Horde Framework -
                  earlier versions of Horde will **not** work.

   .. _`Horde Application Framework`: http://www.horde.org/horde/

   The Horde Framework can be obtained from the Horde website and FTP server,
   at

      http://www.horde.org/horde/

      ftp://ftp.horde.org/pub/horde/

   Many of Skoli's prerequisites are also Horde prerequisites.

   .. Important:: Be sure to have completed all of the steps in the
                  `horde/docs/INSTALL`_ file for the Horde Framework before
                  installing Skoli.

2. SQL support in PHP.

   Skoli stores its data in an SQL database. Build PHP with whichever SQL
   driver you require; see the Horde INSTALL_ file for details.

3. Turba, the Horde contacts manager.

   Turba is the Horde contact management application, designed to be
   integrated with other Horde applications to provide a unified interface to
   contact management throughout the Horde suite.

   Turba is available from:

      http://www.horde.org/turba/

      ftp://ftp.horde.org/pub/turba/

   Turba provides a local address book and an LDAP directory search function
   to IMP.

   You must use the 2.x branch of Turba with Skoli 0.1.


Installing Skoli
================

Skoli is written in PHP, and must be installed in a web-accessible
directory. The precise location of this directory will differ from system to
system. Conventionally, Skoli is installed directly underneath Horde in the
web server's document tree.

Since Skoli is written in PHP, there is no compilation necessary; simply
expand the distribution where you want it to reside and rename the root
directory of the distribution to whatever you wish to appear in the URL. For
example, with the Apache web server's default document root of
``/usr/local/apache/htdocs``, you would type::

   cd /usr/local/apache/htdocs/horde
   tar zxvf /path/to/skoli-x.y.z.tar.gz
   mv skoli-x.y.z skoli

and would then find Skoli at the URL::

   http://your-server/horde/skoli/


Configuring Skoli
====================

1. Configuring Horde for Skoli

   a. Register the application

      In ``horde/config/registry.php``, find the ``applications['skoli']``
      stanza. The default settings here should be okay, but you can change
      them if desired. If you have changed the location of Skoli relative
      to Horde, either in the URL, in the filesystem or both, you must update
      the ``fileroot`` and ``webroot`` settings to their correct values.

      If Skoli is not yet present in ``horde/config/registry.php`` you can
      use something like:

      $this->applications['skoli'] = array(
          'fileroot' => dirname(__FILE__) . '/../skoli',
          'webroot' => $this->applications['horde']['webroot'] . '/skoli',
          'name' => _("School"),
          'status' => 'active',
          'menu_parent' => 'office'
      );

      $this->applications['skoli-menu'] = array(
          'status' => 'block',
          'app' => 'skoli',
          'blockname' => 'tree_menu',
          'menu_parent' => 'skoli',
      );

2. Creating the database tables

   The specific steps to create Skoli's database tables depend on which
   database you've chosen to use.

   First, look in ``scripts/sql/`` to see if a script already exists for your
   database type. If so, you should be able to simply execute that script as
   superuser in your database. (Note that executing the script as the "horde"
   user will probably fail when granting privileges.)

   If such a script does not exist, you'll need to build your own, using the
   file ``skoli.sql`` as a starting point.  If you need assistance in
   creating database tables, you may wish to let us know on the Skoli
   mailing list.

3. Configuring Skoli

   To configure Skoli, change to the ``config/`` directory of the installed
   distribution, and make copies of all of the configuration ``dist`` files
   without the ``dist`` suffix::

      cd config/
      for foo in *.dist; do cp $foo `basename $foo .dist`; done

   Or on Windows::

      copy *.dist *.

   Documentation on the format and purpose of those files can be found in each
   file. You may edit these files if you wish to customize Skoli's
   appearance and behavior. With one exception (``foo.php``) the defaults will
   be correct for most sites.

   You must login to Horde as a Horde Administrator to finish the
   configuration of Skoli. Use the Horde ``Administration`` menu item to
   get to the administration page, and then click on the ``Configuration``
   icon to get the configuration page. Select ``Skoli Name`` from the
   selection list of applications. Fill in or change any configuration values
   as needed. When done click on ``Generate Skoli Name Configuration`` to
   generate the ``conf.php`` file. If your web server doesn't have write
   permissions to the Skoli configuration directory or file, it will not be
   able to write the file. In this case, go back to ``Configuration`` and
   choose one of the other methods to create the configuration file
   ``skoli/config/conf.php``.

   Note for international users: Skoli uses GNU gettext to provide local
   translations of text displayed by applications; the translations are found
   in the ``po/`` directory. If a translation is not yet available for your
   locale (and you wish to create one), see the ``horde/po/README`` file, or
   if you're having trouble using a provided translation, please see the
   `horde/docs/TRANSLATIONS`_ file for instructions.

4. School templates

   To customize your school edit the file ``skoli/config/school.php``. It
   contains some examples you can start from.

5. Testing Skoli

   Use Skoli to create a class and add some entries. Test at least the
   following:

   - Creating a new Class
   - Adding a new entry for each desired type
   - Modifying an entry
   - Deleting an entry


Obtaining Support
=================

If you encounter problems with Skoli, help is available!

The Horde Frequently Asked Questions List (FAQ), available on the Web at

  http://www.horde.org/faq/

The Horde Project runs a number of mailing lists, for individual applications
and for issues relating to the project as a whole. Information, archives, and
subscription information can be found at

  http://www.horde.org/mail/

Lastly, Horde developers, contributors and users may also be found on IRC,
on the channel #horde on the Freenode Network (irc.freenode.net).

Please keep in mind that Skoli is free software written by volunteers.
For information on reasonable support expectations, please read

  http://www.horde.org/support.php

Thanks for using Skoli!

The Skoli team


.. _README: ?f=README.html
.. _`horde/docs/HACKING`: ../../horde/docs/?f=HACKING.html
.. _`horde/docs/INSTALL`: ../../horde/docs/?f=INSTALL.html
.. _`horde/docs/TRANSLATIONS`: ../../horde/docs/?f=TRANSLATIONS.html
